// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/appointmentsTienDm.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DNATestingSystem.GrpcService.TienDM.Protos {
  public static partial class AppointmentsTienDmGRPC
  {
    static readonly string __ServiceName = "AppointmentsTienDmGRPC";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DNATestingSystem.GrpcService.TienDM.Protos.EmptyRequest> __Marshaller_EmptyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DNATestingSystem.GrpcService.TienDM.Protos.EmptyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDmList> __Marshaller_AppointmentsTienDmList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDmList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DNATestingSystem.GrpcService.TienDM.Protos.GetByIdRequest> __Marshaller_GetByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DNATestingSystem.GrpcService.TienDM.Protos.GetByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm> __Marshaller_AppointmentsTienDm = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult> __Marshaller_MutationResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::DNATestingSystem.GrpcService.TienDM.Protos.DeleteRequest> __Marshaller_DeleteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DNATestingSystem.GrpcService.TienDM.Protos.DeleteRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.EmptyRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDmList> __Method_GetAllAsync = new grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.EmptyRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDmList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllAsync",
        __Marshaller_EmptyRequest,
        __Marshaller_AppointmentsTienDmList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.GetByIdRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm> __Method_GetByIdAsync = new grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.GetByIdRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByIdAsync",
        __Marshaller_GetByIdRequest,
        __Marshaller_AppointmentsTienDm);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult> __Method_CreateAsync = new grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAsync",
        __Marshaller_AppointmentsTienDm,
        __Marshaller_MutationResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult> __Method_UpdateAsync = new grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAsync",
        __Marshaller_AppointmentsTienDm,
        __Marshaller_MutationResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.DeleteRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult> __Method_DeleteAsync = new grpc::Method<global::DNATestingSystem.GrpcService.TienDM.Protos.DeleteRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAsync",
        __Marshaller_DeleteRequest,
        __Marshaller_MutationResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDmReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AppointmentsTienDmGRPC</summary>
    [grpc::BindServiceMethod(typeof(AppointmentsTienDmGRPC), "BindService")]
    public abstract partial class AppointmentsTienDmGRPCBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDmList> GetAllAsync(global::DNATestingSystem.GrpcService.TienDM.Protos.EmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///rpc GetAllPaginatedAsync(PaginationRequest) returns (AppointmentsTienDmPaginationResult);
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm> GetByIdAsync(global::DNATestingSystem.GrpcService.TienDM.Protos.GetByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///rpc SearchAsync(SearchAppointmentsTienDmRequest) returns (AppointmentsTienDmPaginationResult);
      ///rpc SearchByParamsAsync(SearchByParamsRequest) returns (AppointmentsTienDmPaginationResult);
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult> CreateAsync(global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult> UpdateAsync(global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult> DeleteAsync(global::DNATestingSystem.GrpcService.TienDM.Protos.DeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AppointmentsTienDmGRPCBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllAsync, serviceImpl.GetAllAsync)
          .AddMethod(__Method_GetByIdAsync, serviceImpl.GetByIdAsync)
          .AddMethod(__Method_CreateAsync, serviceImpl.CreateAsync)
          .AddMethod(__Method_UpdateAsync, serviceImpl.UpdateAsync)
          .AddMethod(__Method_DeleteAsync, serviceImpl.DeleteAsync).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AppointmentsTienDmGRPCBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DNATestingSystem.GrpcService.TienDM.Protos.EmptyRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDmList>(serviceImpl.GetAllAsync));
      serviceBinder.AddMethod(__Method_GetByIdAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DNATestingSystem.GrpcService.TienDM.Protos.GetByIdRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm>(serviceImpl.GetByIdAsync));
      serviceBinder.AddMethod(__Method_CreateAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult>(serviceImpl.CreateAsync));
      serviceBinder.AddMethod(__Method_UpdateAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DNATestingSystem.GrpcService.TienDM.Protos.AppointmentsTienDm, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult>(serviceImpl.UpdateAsync));
      serviceBinder.AddMethod(__Method_DeleteAsync, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DNATestingSystem.GrpcService.TienDM.Protos.DeleteRequest, global::DNATestingSystem.GrpcService.TienDM.Protos.MutationResult>(serviceImpl.DeleteAsync));
    }

  }
}
#endregion
